{
  "filename": "Lecture 01",
  "total_slides": 41,
  "extraction_time": "2025-04-18 02:36:06",
  "slides": [
    {
      "slide_number": 1,
      "title": "Introduction to Java Programming",
      "content": [
        "Introduction to Java Programming",
        "Copyright 2016 Asia Pacific Institute of Information Technology",
        "Object Oriented Programming\nAAPP013-4-2"
      ],
      "notes": "",
      "text": "Introduction to Java Programming\nIntroduction to Java Programming\nCopyright 2016 Asia Pacific Institute of Information Technology\nObject Oriented Programming\nAAPP013-4-2"
    },
    {
      "slide_number": 2,
      "title": "",
      "content": [
        "Topic & Structure of the lesson",
        "What is Java ?\nJava and The Internet\nHow Java differs from the C language\nApplets and Applications\nThe Java Development Kit (JDK)\nA Simple Java Program\nAPI documentation"
      ],
      "notes": "",
      "text": "Topic & Structure of the lesson\nWhat is Java ?\nJava and The Internet\nHow Java differs from the C language\nApplets and Applications\nThe Java Development Kit (JDK)\nA Simple Java Program\nAPI documentation"
    },
    {
      "slide_number": 3,
      "title": "",
      "content": [
        "Learning Outcomes",
        "At the end of this topic, you should be able to:\nExplain what Java means\nList the differences between Java and C\nExplain the differences between an applet and an application\nExplain the definition of the various Java commands listed in the JDK\nWrite simple Java programs"
      ],
      "notes": "",
      "text": "Learning Outcomes\nAt the end of this topic, you should be able to:\nExplain what Java means\nList the differences between Java and C\nExplain the differences between an applet and an application\nExplain the definition of the various Java commands listed in the JDK\nWrite simple Java programs"
    },
    {
      "slide_number": 4,
      "title": "",
      "content": [
        "Key Terms you must be able to use",
        "If you have mastered this topic, you should be able to use the following terms correctly in your assignments and exams:\n\n Application - A complete, self-contained program that performs a specific function directly for the user. \n\n Applet - A Java program which can be distributed as an attachment in a World-Wide Web document and executed by a Java-enabled web browser."
      ],
      "notes": "",
      "text": "Key Terms you must be able to use\nIf you have mastered this topic, you should be able to use the following terms correctly in your assignments and exams:\n\n Application - A complete, self-contained program that performs a specific function directly for the user. \n\n Applet - A Java program which can be distributed as an attachment in a World-Wide Web document and executed by a Java-enabled web browser."
    },
    {
      "slide_number": 5,
      "title": "",
      "content": [
        "Key Terms you must be able to use",
        "If you have mastered this topic, you should be able to use the following terms correctly in your assignments and exams:\n\nPlatform - the hardware / software environment in which a program runs.\n\nJava platform - a software-only platform that runs on top of other, hardware-based platforms."
      ],
      "notes": "",
      "text": "Key Terms you must be able to use\nIf you have mastered this topic, you should be able to use the following terms correctly in your assignments and exams:\n\nPlatform - the hardware / software environment in which a program runs.\n\nJava platform - a software-only platform that runs on top of other, hardware-based platforms."
    },
    {
      "slide_number": 6,
      "title": "",
      "content": [
        "Key Terms you must be able to use",
        "Java Virtual Machine (Java VM)\n\nA virtual CPU including instruction set, register set, class file format, stack, garbage collected memory heap & memory area\n\nEvery Java interpreter, whether it\u2019s a Java development tool or a Web browser that can run Java applets is an implementation of Java VM."
      ],
      "notes": "",
      "text": "Key Terms you must be able to use\nJava Virtual Machine (Java VM)\n\nA virtual CPU including instruction set, register set, class file format, stack, garbage collected memory heap & memory area\n\nEvery Java interpreter, whether it\u2019s a Java development tool or a Web browser that can run Java applets is an implementation of Java VM."
    },
    {
      "slide_number": 7,
      "title": "",
      "content": [
        "Key Terms you must be able to use",
        "Java Application Programming Interface (Java API)\n\nA large collection of ready-made software components that provide many useful capabilities such as graphical user interface (GUI) widgets.\n\nThe Java API is grouped into libraries (packages) of related components"
      ],
      "notes": "",
      "text": "Key Terms you must be able to use\nJava Application Programming Interface (Java API)\n\nA large collection of ready-made software components that provide many useful capabilities such as graphical user interface (GUI) widgets.\n\nThe Java API is grouped into libraries (packages) of related components"
    },
    {
      "slide_number": 8,
      "title": "",
      "content": [
        "What is Java?",
        "Let us examine what Java is in terms of \n\nLanguage comparison\n\nPlatform independence\n\nLanguage features"
      ],
      "notes": "",
      "text": "What is Java?\nLet us examine what Java is in terms of \n\nLanguage comparison\n\nPlatform independence\n\nLanguage features"
    },
    {
      "slide_number": 9,
      "title": "",
      "content": [
        "What is Java?",
        "Language comparison"
      ],
      "notes": "",
      "text": "What is Java?\nLanguage comparison"
    },
    {
      "slide_number": 10,
      "title": "",
      "content": [
        "What is Java?",
        "Language features\nJava is a High-Level Programming Language that is :",
        "Simple\n     - powerful functionality without the confusing features(eg.\u000b   pointers)\n     - reduce 50 % of the bugs\n\nObjected oriented\n      -  implements the basic object technology of C++ with \u000b     enhancement\n\nDistributed\n      - built-in extensive TCP/IP networking capabilities"
      ],
      "notes": "",
      "text": "What is Java?\nLanguage features\nJava is a High-Level Programming Language that is :\nSimple\n     - powerful functionality without the confusing features(eg.\u000b   pointers)\n     - reduce 50 % of the bugs\n\nObjected oriented\n      -  implements the basic object technology of C++ with \u000b     enhancement\n\nDistributed\n      - built-in extensive TCP/IP networking capabilities"
    },
    {
      "slide_number": 11,
      "title": "",
      "content": [
        "What is Java?",
        "Robust\n     - check for problems at compile and run-time - help \u000b   catch the bugs at the early stage of development\n     - handles own memory - no worries on freeing & \u000b    corrupting memory\n- reduce development time\n\nSecure\n     - Java codes passes several tests before executing\u000b   on machine\n    -  eg. Byte-code verifier, class loader",
        "Language features\nJava is a High-Level Programming Language that is :"
      ],
      "notes": "",
      "text": "What is Java?\nRobust\n     - check for problems at compile and run-time - help \u000b   catch the bugs at the early stage of development\n     - handles own memory - no worries on freeing & \u000b    corrupting memory\n- reduce development time\n\nSecure\n     - Java codes passes several tests before executing\u000b   on machine\n    -  eg. Byte-code verifier, class loader\nLanguage features\nJava is a High-Level Programming Language that is :"
    },
    {
      "slide_number": 12,
      "title": "",
      "content": [
        "What is Java?",
        "Multithreaded\n      -  threads - light-weighted processes\n      -  allows many simultaneous activities in 1 program\n      -  better interactive performance and real-time behaviour\n\nPortable\n      -  basic portability of being architecture neutral / independent\n      -  Java builds its user interfaces via an abstract window \u000b     system so the windows can be implemented on UNIX, PC \u000b     & MAC environments",
        "Language features\nJava is a High-Level Programming Language that is :"
      ],
      "notes": "",
      "text": "What is Java?\nMultithreaded\n      -  threads - light-weighted processes\n      -  allows many simultaneous activities in 1 program\n      -  better interactive performance and real-time behaviour\n\nPortable\n      -  basic portability of being architecture neutral / independent\n      -  Java builds its user interfaces via an abstract window \u000b     system so the windows can be implemented on UNIX, PC \u000b     & MAC environments\nLanguage features\nJava is a High-Level Programming Language that is :"
    },
    {
      "slide_number": 13,
      "title": "",
      "content": [
        "What is Java?",
        "both compiled and interpreted\u000b \nwith compiler, a Java program is translated into Java bytecodes\u000b \nwith interpreter,each Java bytecode instruction is parsed and run on computers",
        "Architecture Neutral (Special Feature)",
        "Language features\nJava is a High-Level Programming Language that is :"
      ],
      "notes": "",
      "text": "What is Java?\nboth compiled and interpreted\u000b \nwith compiler, a Java program is translated into Java bytecodes\u000b \nwith interpreter,each Java bytecode instruction is parsed and run on computers\nArchitecture Neutral (Special Feature)\nLanguage features\nJava is a High-Level Programming Language that is :"
    },
    {
      "slide_number": 14,
      "title": "",
      "content": [
        "What is Java?",
        "Architecture Neutral (Special Feature)"
      ],
      "notes": "",
      "text": "What is Java?\nArchitecture Neutral (Special Feature)"
    },
    {
      "slide_number": 15,
      "title": "",
      "content": [
        "What is Java?"
      ],
      "notes": "",
      "text": "What is Java?"
    },
    {
      "slide_number": 16,
      "title": "",
      "content": [
        "What is Java?",
        "Platform - the hardware / software environment in which a program runs.\n\nJava platform - a software-only platform that runs on top of other, hardware-based platforms.",
        "The Java Virtual Machine (Java VM)\n  The Java Application Programming Interface (Java API)",
        "The Java platform has 2 components :"
      ],
      "notes": "",
      "text": "What is Java?\nPlatform - the hardware / software environment in which a program runs.\n\nJava platform - a software-only platform that runs on top of other, hardware-based platforms.\nThe Java Virtual Machine (Java VM)\n  The Java Application Programming Interface (Java API)\nThe Java platform has 2 components :"
    },
    {
      "slide_number": 17,
      "title": "",
      "content": [
        "What is Java?",
        "Java Virtual Machine (Java VM)\nA virtual CPU including instruction set, register set, class file format, stack, garbage collected memory heap & memory area\nEvery Java interpreter, whether it\u2019s a Java development tool or a Web browser that can run Java applets is an implementation of Java VM."
      ],
      "notes": "",
      "text": "What is Java?\nJava Virtual Machine (Java VM)\nA virtual CPU including instruction set, register set, class file format, stack, garbage collected memory heap & memory area\nEvery Java interpreter, whether it\u2019s a Java development tool or a Web browser that can run Java applets is an implementation of Java VM."
    },
    {
      "slide_number": 18,
      "title": "",
      "content": [
        "What is Java?",
        "Java Application Programming Interface (Java API)\nA large collection of ready-made software components that provide many useful capabilities such as graphical user interface (GUI) widgets.\nThe Java API is grouped into libraries (packages) of related components"
      ],
      "notes": "",
      "text": "What is Java?\nJava Application Programming Interface (Java API)\nA large collection of ready-made software components that provide many useful capabilities such as graphical user interface (GUI) widgets.\nThe Java API is grouped into libraries (packages) of related components"
    },
    {
      "slide_number": 19,
      "title": "",
      "content": [
        "Quick Review Question",
        "Name 2 OOP languages\n\nIs Java a language or a platform?\n\nGive 3 features of the Java Programming language\n\nIs a Java program compiled or interpreted?\n\nWhat is the JVM\n\nHow does Java achieve platform independence?"
      ],
      "notes": "",
      "text": "Quick Review Question\nName 2 OOP languages\n\nIs Java a language or a platform?\n\nGive 3 features of the Java Programming language\n\nIs a Java program compiled or interpreted?\n\nWhat is the JVM\n\nHow does Java achieve platform independence?"
    },
    {
      "slide_number": 20,
      "title": "",
      "content": [
        "Java and The Internet",
        "Java is becoming a computing platform-base for    \u000b   software developers to build applications \n  these applications can execute on any computing \u000b   platform\n  a variety of applications can be built eg. critical \u000b   applications used by big companies, accounting, asset\u000b   management, databases, human resources and sales"
      ],
      "notes": "",
      "text": "Java and The Internet\nJava is becoming a computing platform-base for    \u000b   software developers to build applications \n  these applications can execute on any computing \u000b   platform\n  a variety of applications can be built eg. critical \u000b   applications used by big companies, accounting, asset\u000b   management, databases, human resources and sales"
    },
    {
      "slide_number": 21,
      "title": "",
      "content": [
        "How Java differs from C",
        "No preprocessor \u000b   Java does not require constructs such as #define,    \u000b   #include, and #ifdef",
        "JAVA uses 16-bit Unicode characters\u000b   compatible with ASCII and to the ISO8859-1 \u000b   (Latin-1) characters",
        "No pointers\u000b   referencing and dereferencing of objects are \u000b   handled automatically by JAVA"
      ],
      "notes": "",
      "text": "How Java differs from C\nNo preprocessor \u000b   Java does not require constructs such as #define,    \u000b   #include, and #ifdef\nJAVA uses 16-bit Unicode characters\u000b   compatible with ASCII and to the ISO8859-1 \u000b   (Latin-1) characters\nNo pointers\u000b   referencing and dereferencing of objects are \u000b   handled automatically by JAVA"
    },
    {
      "slide_number": 22,
      "title": "",
      "content": [
        "How Java differs from C",
        "No multiple inheritances\u000b   JAVA does not support multiple inheritances, features\u000b   of multiple inheritance are supported in the form of\u000b   interfaces",
        "Garbage Collection\u000b   in C you need to make explicit calls to malloc() to\u000b  allocate memory. Use free() to deallocate memory.\u000b  In Java, there is a new keyword, but no delete. Objects\u000b  are implicitly deleted when they go out of scope or are\u000b  no longer needed.",
        "Note :  There are many more differences between JAVA and C"
      ],
      "notes": "",
      "text": "How Java differs from C\nNo multiple inheritances\u000b   JAVA does not support multiple inheritances, features\u000b   of multiple inheritance are supported in the form of\u000b   interfaces\nGarbage Collection\u000b   in C you need to make explicit calls to malloc() to\u000b  allocate memory. Use free() to deallocate memory.\u000b  In Java, there is a new keyword, but no delete. Objects\u000b  are implicitly deleted when they go out of scope or are\u000b  no longer needed.\nNote :  There are many more differences between JAVA and C"
    },
    {
      "slide_number": 23,
      "title": "",
      "content": [
        "Quick Review Question",
        "List the 5 differences between Java and C/C++\n\nWhich of these differences are between C and Java?\n\nWhich are between C++ and Java?"
      ],
      "notes": "",
      "text": "Quick Review Question\nList the 5 differences between Java and C/C++\n\nWhich of these differences are between C and Java?\n\nWhich are between C++ and Java?"
    },
    {
      "slide_number": 24,
      "title": "",
      "content": [
        "Applets and Applcations",
        "The most common types of Java programs are :",
        "Applets\n     -  A Java program that adheres to certain conventions\u000b        that allow it to run within a Java-enabled web \u000b        browser.",
        "Applications\n     -  A standalone Java program that runs directly on a java\u000b        platform. \n     -  As Java is a general purpose, high-level programming \n        language and a powerful software platform, we can \u000b        write many types of programs."
      ],
      "notes": "",
      "text": "Applets and Applcations\nThe most common types of Java programs are :\nApplets\n     -  A Java program that adheres to certain conventions\u000b        that allow it to run within a Java-enabled web \u000b        browser.\nApplications\n     -  A standalone Java program that runs directly on a java\u000b        platform. \n     -  As Java is a general purpose, high-level programming \n        language and a powerful software platform, we can \u000b        write many types of programs."
    },
    {
      "slide_number": 25,
      "title": "",
      "content": [
        "The Java Development Kit (JDK)",
        "The JDK contains what one needs to start building and executing JAVA applications and applets."
      ],
      "notes": "",
      "text": "The Java Development Kit (JDK)\nThe JDK contains what one needs to start building and executing JAVA applications and applets."
    },
    {
      "slide_number": 26,
      "title": "",
      "content": [
        "The Java Development Kit (JDK)",
        "Here is how you can set up and program in Java",
        "Download the Java Development Kit (JDK)\u000b\u000bhttp://www.oracle.com/technetwork/java/javase/downloads/index.html"
      ],
      "notes": "",
      "text": "The Java Development Kit (JDK)\nHere is how you can set up and program in Java\nDownload the Java Development Kit (JDK)\u000b\u000bhttp://www.oracle.com/technetwork/java/javase/downloads/index.html"
    },
    {
      "slide_number": 27,
      "title": "",
      "content": [
        "The Java Development Kit (JDK)",
        "The JAVA API documentation is the standard on-line help for the JAVA platform. You will get most of what you need from this API  (online : http://docs.oracle.com/javase/8/docs/api/)."
      ],
      "notes": "",
      "text": "The Java Development Kit (JDK)\nThe JAVA API documentation is the standard on-line help for the JAVA platform. You will get most of what you need from this API  (online : http://docs.oracle.com/javase/8/docs/api/)."
    },
    {
      "slide_number": 28,
      "title": "",
      "content": [
        "The Java Development Kit (JDK)"
      ],
      "notes": "",
      "text": "The Java Development Kit (JDK)"
    },
    {
      "slide_number": 29,
      "title": "",
      "content": [
        "Quick Review Question",
        "Here are a couple quick questions before we plunge into our \nfirst Java program.\n\nWhat is the difference between an applet and an application?\n\nDoes an application need the JVM for execution?\n\nDoes an applet need the JVM for execution?\n\nDoes a browser need the JVM for executing Java applets?\n\nHow does the JVM get embedded/installed in a browser \n    or CPU?"
      ],
      "notes": "",
      "text": "Quick Review Question\nHere are a couple quick questions before we plunge into our \nfirst Java program.\n\nWhat is the difference between an applet and an application?\n\nDoes an application need the JVM for execution?\n\nDoes an applet need the JVM for execution?\n\nDoes a browser need the JVM for executing Java applets?\n\nHow does the JVM get embedded/installed in a browser \n    or CPU?"
    },
    {
      "slide_number": 30,
      "title": "",
      "content": [
        "A simple Java program",
        "1. Create a Java Source File \n\nUsing a text editor (eg. Notepad), create a file named\nHelloWorldApp.java with the following Java code:"
      ],
      "notes": "",
      "text": "A simple Java program\n1. Create a Java Source File \n\nUsing a text editor (eg. Notepad), create a file named\nHelloWorldApp.java with the following Java code:"
    },
    {
      "slide_number": 31,
      "title": "",
      "content": [
        "A simple Java program",
        "/*Sample_01\n * The HelloWorldApp class implements an application\n * that simply displays \"Hello World!\" to the standard\n * output. \n */ \n class HelloWorldApp { \n    public static void main(String[] args) { \n       System.out.println(\"Hello World!\"); //Display the string. \n           } \n        }"
      ],
      "notes": "",
      "text": "A simple Java program\n/*Sample_01\n * The HelloWorldApp class implements an application\n * that simply displays \"Hello World!\" to the standard\n * output. \n */ \n class HelloWorldApp { \n    public static void main(String[] args) { \n       System.out.println(\"Hello World!\"); //Display the string. \n           } \n        }"
    },
    {
      "slide_number": 32,
      "title": "",
      "content": [
        "A simple Java program",
        "If you use the NoteTab Light editor to type Java \nprograms, here is how it looks like;"
      ],
      "notes": "",
      "text": "A simple Java program\nIf you use the NoteTab Light editor to type Java \nprograms, here is how it looks like;"
    },
    {
      "slide_number": 33,
      "title": "",
      "content": [
        "A simple Java program",
        "2.  Compile the Source File \n    Compile the source file using the Java compiler like this; \n\t\t\t     \n\t\t\tjavac HelloWorldApp.java"
      ],
      "notes": "",
      "text": "A simple Java program\n2.  Compile the Source File \n    Compile the source file using the Java compiler like this; \n\t\t\t     \n\t\t\tjavac HelloWorldApp.java"
    },
    {
      "slide_number": 34,
      "title": "",
      "content": [
        "A simple Java program",
        "If the compilation succeeds, the compiler creates a file named HelloWorldApp.class in the same directory (folder) as the Java source file (HelloWorldApp.java). This class file contains Java bytecodes, which are platform-independent codes interpreted by the Java runtime system.  \n\nIf the compilation fails, make sure you typed in and named the program exactly as shown above, using the capitalization shown. If you can't find the problem, Compiler Problems might be able to help you."
      ],
      "notes": "",
      "text": "A simple Java program\nIf the compilation succeeds, the compiler creates a file named HelloWorldApp.class in the same directory (folder) as the Java source file (HelloWorldApp.java). This class file contains Java bytecodes, which are platform-independent codes interpreted by the Java runtime system.  \n\nIf the compilation fails, make sure you typed in and named the program exactly as shown above, using the capitalization shown. If you can't find the problem, Compiler Problems might be able to help you."
    },
    {
      "slide_number": 35,
      "title": "",
      "content": [
        "A simple Java program",
        "3.  Run The Application\n        Run the application using the command like this; \n\t\t\t     java HelloWorldApp"
      ],
      "notes": "",
      "text": "A simple Java program\n3.  Run The Application\n        Run the application using the command like this; \n\t\t\t     java HelloWorldApp"
    },
    {
      "slide_number": 36,
      "title": "",
      "content": [
        "Follow Up Assignment",
        "Using any text editor, write a Java application that \u000b  display the message \n\n  Surely the best Java programmers come from Java!\n\n Test your application\n\n Show your app on the board at the beginning of the \u000b  next lesson"
      ],
      "notes": "",
      "text": "Follow Up Assignment\nUsing any text editor, write a Java application that \u000b  display the message \n\n  Surely the best Java programmers come from Java!\n\n Test your application\n\n Show your app on the board at the beginning of the \u000b  next lesson"
    },
    {
      "slide_number": 37,
      "title": "",
      "content": [
        "Summary of Main Teaching Points",
        "What is Java?\nLanguage comparison\nPlatform independence\nLanguage features\n\tSimple, secure, muti-threaded, \u2026\nJava and The Internet\nComputing platform base, \u2026\nHow Java differs from the C language\nNo pointers, no multiple inheritence (C++), \u2026"
      ],
      "notes": "",
      "text": "Summary of Main Teaching Points\nWhat is Java?\nLanguage comparison\nPlatform independence\nLanguage features\n\tSimple, secure, muti-threaded, \u2026\nJava and The Internet\nComputing platform base, \u2026\nHow Java differs from the C language\nNo pointers, no multiple inheritence (C++), \u2026"
    },
    {
      "slide_number": 38,
      "title": "",
      "content": [
        "Applets and Applications\n\nThe Java Development Kit (JDK)\n\nA Simple Java Program\n\nAPI documentation",
        "Summary of Main Teaching Points"
      ],
      "notes": "",
      "text": "Applets and Applications\n\nThe Java Development Kit (JDK)\n\nA Simple Java Program\n\nAPI documentation\nSummary of Main Teaching Points"
    },
    {
      "slide_number": 39,
      "title": "",
      "content": [
        "Learning Outcomes",
        "At the end of this topic, you should be able to:\nExplain what Java means\nList the differences between Java and C\nExplain the differences between an applet and an application\nExplain the definition of the various Java commands listed in the JDK\nWrite simple Java programs"
      ],
      "notes": "",
      "text": "Learning Outcomes\nAt the end of this topic, you should be able to:\nExplain what Java means\nList the differences between Java and C\nExplain the differences between an applet and an application\nExplain the definition of the various Java commands listed in the JDK\nWrite simple Java programs"
    },
    {
      "slide_number": 40,
      "title": "",
      "content": [
        "Q & A",
        "Question and Answer Session"
      ],
      "notes": "",
      "text": "Q & A\nQuestion and Answer Session"
    },
    {
      "slide_number": 41,
      "title": "",
      "content": [
        "Next Session",
        "Overview of\nIdentifiers\nData types\nOperators\nExpressions"
      ],
      "notes": "",
      "text": "Next Session\nOverview of\nIdentifiers\nData types\nOperators\nExpressions"
    }
  ]
}